{"version":3,"sources":["redux/types.js","redux/action.js","Components/Form.js","Components/Post.js","Components/Posts.js","Components/Loader.js","Components/FetchPosts.js","Components/ErrorAlert.js","App.js","redux/reducers/postsReducer.js","redux/reducers/appReducer.js","redux/rootReducer.js","redux/middleware/middleware.js","redux/sagas.js","index.js"],"names":["ADD_POST","REMOVE_POST","FETCH_POST","REMOVE_FETCH_POST","SHOW_LOADER","HIDE_LOADER","SHOW_ALERT","HIDE_ALERT","REQUEST_POSTS","hideLoader","type","showAlert","content","dispatch","payload","setTimeout","hideAlert","Form","useDispatch","useState","title","text","setText","btnState","setBtnState","className","onSubmit","e","preventDefault","htmlFor","onChange","target","name","length","value","id","disabled","onClick","item","Date","now","toString","Post","click","Posts","getPosts","useSelector","state","posts","map","post","Loader","role","FetchPosts","fetchPosts","loader","app","spinner","ErrorAlert","show","alerts","App","alert","initialState","rootReducer","combineReducers","action","filter","forbidden","sagaWatcher","sagaWorker","takeEvery","put","call","fetchPost","a","fetch","res","json","saga","createSagaMiddleware","store","createStore","applyMiddleware","thunk","next","w","includes","run","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57df1304.chunk.js","sourcesContent":["//posts\nexport const ADD_POST = 'POST/ADD_POST';\nexport const REMOVE_POST = 'POST/REMOVE_POST';\n\nexport const FETCH_POST = 'POST/FETCH_POST';\nexport const REMOVE_FETCH_POST = 'POST/REMOVE_FETCH_POST';\n\n//app\nexport const SHOW_LOADER = 'APP/SHOW_LOADER';\nexport const HIDE_LOADER = 'APP/HIDE_LOADER';\n\nexport const SHOW_ALERT = 'APP/SHOW_ALERT';\nexport const HIDE_ALERT = 'APP/HIDE_ALERT';\n\n//for saga\nexport const REQUEST_POSTS = 'POST/REQUEST_POSTS';\n\n","import {\n    ADD_POST,\n    FETCH_POST,\n    HIDE_ALERT,\n    HIDE_LOADER,\n    REMOVE_FETCH_POST,\n    REMOVE_POST, REQUEST_POSTS,\n    SHOW_ALERT,\n    SHOW_LOADER\n} from \"./types\";\n\n//posts\nexport const addPost = (post) => ({type: ADD_POST, payload: post});\nexport const removePost = (id) => ({type: REMOVE_POST, payload: id});\n\n//spinner\nexport const showLoader = () => ({type: SHOW_LOADER});\nexport const hideLoader = () => ({type: HIDE_LOADER});\n\n//alert\nexport const showAlert = (content) => {\n    return dispatch => {\n        dispatch(  {type: SHOW_ALERT, payload: content});\n        setTimeout(() => {\n            dispatch(hideAlert())\n        }, 2000)\n    }\n};\nexport const hideAlert = () => ({type: HIDE_ALERT});\n\n//fetch\n\n// export const fetchPost = () => {\n//     return async dispatch => {\n//         try {\n//             dispatch(showLoader());\n//\n//             const res = await fetch('https://jsonplaceholder.typidcode.com/posts?_limit=5');\n//             const json = await res.json();\n//             dispatch({type: FETCH_POST, payload: json});\n//\n//             dispatch(hideLoader());\n//         }\n//         catch (e) {\n//             dispatch(showAlert(`Что-то пошло не так  -  ${e}`))\n//             dispatch(hideLoader())\n//         }\n//     }\n// };\n\nexport const removeFetchPost = (id) => ({type: REMOVE_FETCH_POST, payload: id});\n\n//fetch saga for example\n\nexport const fetchPost = () => {\n\n    return {\n        type: REQUEST_POSTS\n    }\n\n    // return async dispatch => {\n    //     try {\n    //         dispatch(showLoader());\n    //\n    //         const res = await fetch('https://jsonplaceholder.typidcode.com/posts?_limit=5');\n    //         const json = await res.json();\n    //         dispatch({type: FETCH_POST, payload: json});\n    //\n    //         dispatch(hideLoader());\n    //     }\n    //     catch (e) {\n    //         dispatch(showAlert(`Что-то пошло не так  -  ${e}`))\n    //         dispatch(hideLoader())\n    //     }\n    // }\n};\n\n\n","import React, {useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {addPost} from \"../redux/action\";\n\nconst Form = () => {\n\n    const dispatch = useDispatch();\n    const [text, setText] = useState({title: ''});\n    const [btnState, setBtnState] = useState(true);\n\n    const handleText = (e) => {\n        if(text[e.target.name].length !== 0) {\n            setBtnState(false)\n        }\n        setText({[e.target.name]: e.target.value})\n    };\n    const handlerPost = () => {\n        const item = {id: Date.now().toString(), title: text.title}\n        dispatch(addPost(item))\n\n        setText({title: ''});\n        setBtnState(true)\n    };\n\n\n\n\n    return (\n        <form className={'mb-4'} onSubmit={e => e.preventDefault()}>\n            <h1>Form post</h1>\n            <div className={'form-group'}>\n                <label htmlFor=\"form\">Enter text</label>\n                <input\n                    type=\"text\"\n                    onChange={handleText}\n                    className={'form-control'}\n                    id={'form'}\n                    name={'title'}\n                    value={text.title}\n                />\n                <button disabled={btnState} onClick={handlerPost} className={'btn btn-success mt-2'}>Create post</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Form;","import React from 'react';\n\nconst Post = ({title, click}) => {\n\n\n\n\n    return (\n        <div className={'card'}>\n            <div className={'d-flex justify-content-between card-body'}>\n                <p className={'card-title'}>{title}</p>\n                <button onClick={click} className={'btn btn-danger'}>x</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from \"./Post\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {removePost} from \"../redux/action\";\n\n\n\nconst Posts = () => {\n\n    const getPosts = useSelector(state => state.posts.posts)\n    const dispatch = useDispatch()\n    const posts = getPosts.length\n\n    return (\n        <div>\n\n            { posts === 0 ? <p>Постов пока нет</p> :\n                <>{getPosts.map(post => <Post key={post.id} click={() => dispatch(removePost(post.id))} title={post.title}/>)}</>\n            }\n        </div>\n    );\n};\n\nexport default Posts;","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"spinner-border text-primary\" role=\"status\">\n\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchPost, removeFetchPost} from \"../redux/action\";\nimport Post from \"./Post\";\nimport Loader from \"./Loader\";\n\nconst FetchPosts = () => {\n    \n    const fetchPosts = useSelector(state => state.posts.fetchPosts);\n    const loader = useSelector(state => state.app.loader);\n    const dispatch = useDispatch();\n\n    const handlerFetch = () => dispatch(fetchPost());\n\n    const spinner = loader ? <Loader/> : <button onClick={handlerFetch} className={'btn btn-primary'}>Load posts</button>\n\n    return (\n        <>\n            <div>\n                { fetchPosts.length === 0 ? spinner :\n                    <div>{fetchPosts.map( post => <Post key={post.id} click={() => dispatch(removeFetchPost(post.id))} title={post.title}/>)}</div>\n                }\n            </div>\n        </>\n    );\n};\n\nexport default FetchPosts;","import React from 'react';\nimport {useSelector} from \"react-redux\";\n\nconst ErrorAlert = ({content}) => {\n\n    const alert = useSelector( state => state.app.alerts);\n    const show = alert ? 'd-block position-absolute' : 'd-none'\n\n    return (\n        <div className={`alert alert-danger ${show}`} role=\"alert\">\n            {content}\n        </div>\n    );\n};\n\nexport default ErrorAlert;\n","import React from 'react';\nimport Form from \"./Components/Form\";\nimport Posts from \"./Components/Posts\";\nimport FetchPosts from \"./Components/FetchPosts\";\nimport ErrorAlert from \"./Components/ErrorAlert\";\nimport {useSelector} from \"react-redux\";\n\nconst App = () => {\n\n    const alert = useSelector( state => state.app.alerts);\n\n    return (\n        <div className={'container pt-3'}>\n\n            <ErrorAlert content={alert} />\n\n            <div className=\"row\">\n                <div className={'col'}>\n                    <Form/>\n                </div>\n            </div>\n            <div className=\"row\">\n\n                <div className={'col'}>\n                    <h2>Посты</h2>\n                    <Posts/>\n                </div>\n                <div className={'col'}>\n                    <h2>Серверные посты</h2>\n                    <FetchPosts/>\n                </div>\n\n            </div>\n\n        </div>\n    );\n};\n\nexport default App;","import {ADD_POST, FETCH_POST, REMOVE_FETCH_POST, REMOVE_POST} from \"../types\";\n\nconst initialState = {\n    posts: [\n        {id: 1, title: 'text'},\n        {id: 3, title: 'text 23'},\n        {id: 2, title: 'text 33'},\n    ],\n    fetchPosts: [],\n\n};\n\nexport const postsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            return {\n                ...state,\n                posts: [...state.posts, action.payload]\n            }\n        }\n        case REMOVE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(item => item.id !== action.payload)\n            }\n        }\n        case FETCH_POST: {\n            return {\n                ...state,\n                fetchPosts: [...action.payload]\n            }\n        }\n        case REMOVE_FETCH_POST: {\n            return {\n                ...state,\n                fetchPosts: state.fetchPosts.filter(item => item.id !== action.payload)\n            }\n        }\n\n        default: return state\n    }\n};","import {HIDE_ALERT, HIDE_LOADER, SHOW_ALERT, SHOW_LOADER} from \"../types\";\n\nconst initialState = {\n    loader: false,\n    alerts: null\n};\n\nexport const appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOW_LOADER: {\n            return {...state, loader: true}\n        }\n        case HIDE_LOADER: {\n            return {...state, loader: false}\n        }\n        case SHOW_ALERT: {\n            return {...state, alerts: action.payload}\n        }\n        case HIDE_ALERT: {\n            return {...state, alerts: null}\n        }\n\n        default: return state\n    }\n};","import {combineReducers} from \"redux\";\nimport {postsReducer} from \"./reducers/postsReducer\";\nimport {appReducer} from \"./reducers/appReducer\";\n\nexport const rootReducer = combineReducers({\n    posts: postsReducer,\n    app: appReducer\n});","import {ADD_POST} from \"../types\";\nimport {showAlert} from \"../action\";\n\n\nconst forbidden = ['fuck', 'spam', 'dead'];\n\nexport const forbiddenWords = ({ dispatch }) => {\n    return function (next) {\n        return function (action) {\n            if (action.type === ADD_POST) {\n                const found = forbidden.filter(w => action.payload.title.includes(w))\n                if(found.length) {\n                    return dispatch(showAlert('Эти слова недопустимы'))\n                }\n            }\n            return next(action)\n        }\n    } \n};","import {takeEvery, put, call} from 'redux-saga/effects'\nimport {FETCH_POST, REQUEST_POSTS} from \"./types\";\nimport {hideLoader, showAlert, showLoader} from \"./action\";\n\nexport function* sagaWatcher() {\n    yield takeEvery(REQUEST_POSTS, sagaWorker)\n}\n\nfunction* sagaWorker() {\n    \n    try {\n        yield put(showLoader());\n        const payload = yield call(fetchPost);\n        yield put({type: FETCH_POST, payload});\n        yield put(hideLoader())\n    }\n    catch (e) {\n        yield put(showAlert(`Что-то пошло не так  -  ${e}`))\n        yield put(hideLoader())\n    }\n}\n\nexport const fetchPost = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5');\n    return await res.json();\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {applyMiddleware, createStore} from \"redux\";\nimport {rootReducer} from \"./redux/rootReducer\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {forbiddenWords} from \"./redux/middleware/middleware\";\nimport createSagaMiddleware from 'redux-saga'\nimport {sagaWatcher} from \"./redux/sagas\";\n\n\nconst saga = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(thunk, forbiddenWords, saga));\n\nsaga.run(sagaWatcher)\n\nconst app = (\n    <Provider store={store}>\n        <React.StrictMode>\n            <App  />\n        </React.StrictMode>\n    </Provider>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n"],"sourceRoot":""}